syntax = "proto3";

package example;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/zanven42/proto-database-go/dbproto/database.proto";

option (gogoproto.gostring_all) = true;

// test description
message dbUser {
	option (gogoproto.description) = true;
	
	option (dbproto.sqlxdb) = true;
	option (dbproto.dbname) = "db";
	option (dbproto.tablename) = "table";
	bool staff = 1 [(dbproto.colname) = "_staff"]; 
	apiUser apiuser = 2;
}

message apiUser {
	string ID = 1 [(dbproto.colname) = "_Id", (dbproto.autokey) = true];
	string Name = 2 [(dbproto.colname) = "_name"];
	string Email = 3 [(dbproto.colname) = "_email"];
	message Query {
		option (dbproto.query) = true; // not yet defined
		oneof field {
			string Name = 1; // maybe define options for colname here? and run
			string Email = 2; // any query objects through a secondary generator?
		}
	}
}

message apiUserGetRequest {
	repeated apiUser.Query Query = 1;
}

message apiUserGetResponse {
	repeated apiUser users = 1;
}

service API { 
	rpc GetUser(apiUserGetRequest) returns (apiUserGetResponse);
}